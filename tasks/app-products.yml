---
- set_fact:
    appname: products


- name: provision infra
  ansible.builtin.include_role:
    name: cloud-native-appdev-lab-role
    tasks_from: infra-provision



- name: "Manage {{appname}} container state - {{appstate}} - {{appconfig[appname].ip}}"
  docker_container:
    name: "{{appname}}"
    hostname: "{{appname}}"
    image: "{{appconfig[appname].image}}"
    state: "{{ appconfig[appname].appstate }}"
    recreate: "{{ appconfig[appname].recreate }}"
    restart_policy: unless-stopped
    container_default_behavior: no_defaults
    detach: true
    user: "{{ appconfig[appname].exec_as_user }}:{{ appconfig[appname].exec_as_group }}"
    ports: "{{ appconfig[appname].ports | default(omit,true)}}"
    
    command: 
    env:
      OTEL_METRICS_EXPORTER: "none"
      OTEL_EXPORTER: "otlp_span"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://grafana-agent:4317"
      OTEL_RESOURCE_ATTRIBUTES: "service.name=products,team.name=backend,environment=production"
      JAVA_OPTS: "-javaagent:/opentelemetry-javaagent.jar"
      SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS: "kafka:9092"
      SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS: "kafka:9092"
    labels: |
      {
        "traefik.http.services.{{appname}}.loadbalancer.server.port": "8080",
        "traefik.http.routers.{{appname}}.service": "{{appname}}",
        "traefik.http.routers.{{appname}}.entrypoints": "https",
        "traefik.http.routers.{{appname}}.tls": "true",
        "traefik.http.routers.{{appname}}.rule": "Host(`{{appname}}.{{inventory_hostname}}`)",
      }
    volumes:
    networks_cli_compatible: yes
    network_mode: primenet
    networks:
      - name: primenet
        ipv4_address: "{{appconfig[appname].ip}}"
    log_driver: loki
    log_options:
      loki-url: "http://{{appconfig.loki.ip}}/loki/api/v1/push"
      loki-external-labels: "service={{ '{{' }}.Name{{ '}}' }}"

- name: Check if server is up {{inventory_hostname}}
  when:  appconfig[appname].appstate == 'started'
  uri:
    url: "https://{{appname}}.{{inventory_hostname}}/actuator/health"
    method: GET
    status_code: 200
  register: result
  until: result.status == 200
  retries: 60
  delay: 2


- name: delete infra
  ansible.builtin.include_role:
    name: cloud-native-appdev-lab-role
    tasks_from: infra-delete