---
- stat:
    path: "/home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}.p12"
  register: keystore

- stat:
    path: "/home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}-truststore.p12"
  register: truststore

- stat:
    path: "/home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}-root-ca.key"
  register: rootcaprivkey

- stat:
    path: "/home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}-root-ca.pem"
  register: rootcapubkey

- stat:
    path: "/home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}.key"
  register: privkey

- stat:
    path: "/home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}.csr"
  register: privcsr

- stat:
    path: "/home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}.pem"
  register: pubkey

- name: Create tls folder
  file:
    path: /home/{{ ansible_user }}/apps/tls
    state: directory
    mode: '0755'

- name: Generate root ca privkey
  when: not rootcaprivkey.stat.exists
  shell: |
    openssl genrsa -out /home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}-root-ca.key 4096

- name: Generate root ca pubkey
  when: not rootcapubkey.stat.exists
  shell: |
    openssl req -x509 -new -nodes \
    -key /home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}-root-ca.key \
    -sha256 \
    -days 365000 \
    -subj "/CN=*.{{inventory_hostname}}" \
    -out /home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}-root-ca.pem

# - name: Generate privkey
#   when: not privkey.stat.exists
#   shell: |
#     openssl genrsa -out /home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}.key 4096

# - name: Generate privcsr
#   when: not privcsr.stat.exists
#   shell: |
#     openssl req -new \
#     -key /home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}.key \
#     -subj "/CN=*.{{inventory_hostname}}" \
#     -out /home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}.csr


- name: Generate key pair
  when: not keystore.stat.exists
  shell: |
    keytool -genkey \
    -alias {{inventory_hostname}}  \
    -storepass password \
    -keyalg RSA \
    -keysize 4096 \
    -storetype PKCS12 \
    -dname "cn=*.{{inventory_hostname}}" \
    -ext "SAN=dns:{{inventory_hostname}},dns:*.{{inventory_hostname}}" \
    -validity 365000 \
    -keystore /home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}.p12

- name: Extract priv key
  when: not privkey.stat.exists
  shell: |
    openssl pkcs12 \
    -in /home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}.p12 \
    -nodes \
    -password pass:password -nocerts \
    -out /home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}.key

- name: Generate Generate privcsr
  when: not privkey.stat.exists
  shell: |
    keytool -certreq \
    -alias {{inventory_hostname}} \
    -storepass password \
    -storetype PKCS12 \
    -noprompt \
    -keystore /home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}.p12 \
    > /home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}.csr

- name: Template openssl csr config
  ansible.builtin.template: 
    src: templates/tls/csr.cnf
    dest: /home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}.cnf
    mode: '0644'

- name: Sign Generate pubkey
  when: not pubkey.stat.exists
  shell: |
    openssl x509 -req \
    -in /home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}.csr \
    -CA /home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}-root-ca.pem \
    -CAkey /home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}-root-ca.key  \
    -CAcreateserial \
    -days 365000 -sha256  \
    -extfile /home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}.cnf \
    -out /home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}.pem

- name: Create truststore
  when: not truststore.stat.exists
  shell: |
    keytool -import \
    -alias {{inventory_hostname}}-root-ca \
    -storepass password \
    -storetype PKCS12 \
    -noprompt \
    -keystore /home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}.p12 \
    -file /home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}-root-ca.pem

- name: Reimport signed pubkey
  shell: |
    keytool -import \
    -alias {{inventory_hostname}} \
    -storepass password \
    -storetype PKCS12 \
    -noprompt \
    -keystore /home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}.p12 \
    -file /home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}.pem

- name: Create truststore
  when: not truststore.stat.exists
  shell: |
    keytool -import \
    -alias {{inventory_hostname}}-root-ca \
    -storepass password \
    -storetype PKCS12 \
    -noprompt \
    -keystore /home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}-truststore.p12 \
    -file /home/{{ ansible_user }}/apps/tls/{{inventory_hostname}}-root-ca.pem

- name: manual instructions to be done if wanted
  debug:
    msg: copy {{inventory_hostname}}-root-ca.pem to /usr/local/share/ca-certificates and run sudo update-ca-certificates

- name: import in chrome certificates
  debug:
    msg: import in certificates {{inventory_hostname}}-root-ca.pem