---
docker:
  pullregistry: registry.awon.lan
  registries:
    - registry.work.lan
    - registry.awon.lan
  dns: 
    - 172.17.0.1

aptproxy: http://192.168.8.100:3142

# global dnsmasq config. useful in home networks not so much on single host
dnsmasq:
  # listen: 0.0.0.0
  dhcp-range: 192.168.8.8,192.168.8.253,255.255.255.0,12h
  dhcp-option-router: option:router,192.168.8.1
  dhcp-option-dns: option:dns-server,192.168.8.1
  address:
    # gateway
    - hostname: gate.lan
      ip: 192.168.8.1
      mac: "00:00:00:00:00:00"
    
    # dns dhcp
    - hostname: cipi.lan
      ip: 192.168.8.254
      mac: "00:00:00:00:00:00"
    
    # 24/7 on servers
    - hostname: awon.lan
      ip: 192.168.8.100
      mac: "00:00:00:00:00:00"
    - hostname: bbee.lan
      ip: 192.168.8.101
      mac: "00:00:00:00:00:00"


config_folder_root: /home/{{ ansible_user }}/apps
data_folder_root: /home/{{ ansible_user }}/apps

config_folder_default: "{{ config_folder_root }}/{{ appname }}/config"
data_folder_default: "{{ data_folder_root }}/{{ appname }}/data"

global_appstate: started
global_recreate: true
global_purge: false

appconfig:
  # functional apps from 20 to 30 ip range
  shopping-cart:
    ip: 172.18.0.21
    image: "{{ images['shopping-cart'] }}"

    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 0
    exec_as_group: 0
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

  products:
    ip: 172.18.0.22
    image: "{{ images['products'] }}"

    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 0
    exec_as_group: 0
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 


  web-shop:
    ip: 172.18.0.23
    image: "{{ images['web-shop'] }}"

    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 0
    exec_as_group: 0
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

  squid: 
    ip: 172.18.0.24
    image: "{{ images['squid'] }}"

    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 0
    exec_as_group: 0
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

  smoke-test-app:
    ip: 172.18.0.29
    image: "{{ images['smoke-test-app'] }}"

    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 1000
    exec_as_group: 1000
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

  serve:
    ip: 172.18.0.30
    image: "{{ images['serve'] }}"

    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 1000
    exec_as_group: 1000
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

  # platform essentials
  portainer: 
    ip: 172.18.0.40
    image: "{{ images['portainer-ce'] }}"

    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 0
    exec_as_group: 0
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

  nexus: 
    ip: 172.18.0.41
    image: "{{ images['nexus3'] }}"
    
  registry: 
    ip: 172.18.0.42
    image: "{{ images['registry'] }}"

    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 1000
    exec_as_group: 1000
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

  regui: 
    ip: 172.18.0.45
    image: "{{ images['docker-registry-ui'] }}"

    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 0
    exec_as_group: 0
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

  traefik: 
    ip: 172.18.0.43
    image: "{{ images['traefik'] }}"

    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 0
    exec_as_group: 0
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 
      - "80:80"
      - "443:443"
      # - "8080:8080"

  keycloak: 
    ip: 172.18.0.48
    image: "{{ images['keycloak'] }}"


    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 1000
    exec_as_group: 1000
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

  reposilite: 
    ip: 172.18.0.49
    image: "{{ images['reposilite'] }}"


    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 0
    exec_as_group: 0
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

  # databases
  mysql: 
    ip: 172.18.0.50
    image: "{{ images['mysql'] }}"

  oracle: 
    ip: 172.18.0.51 

  mariadb: 
    ip: 172.18.0.52 
    image: "{{ images['mariadb'] }}"

    declare_hostname: true
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 1000
    exec_as_group: 1000
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 
      
  infinispan:
    ip: 172.18.0.53 
  postgres: 
    ip: 172.18.0.54
    image: "{{ images['postgres'] }}"

    declare_hostname: true
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 1000
    exec_as_group: 1000
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

  elastic:
    ip: 172.18.0.55
    image: "{{ images['elasticsearch'] }}"
  kibana:
    ip: 172.18.0.56
    image: "{{ images['kibana'] }}"
  adminer:
    ip: 172.18.0.57
    image: "{{ images['adminer'] }}"
    
    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 1000
    exec_as_group: 1000
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 
    
  minio:
    ip: 172.18.0.58
    image: "{{ images['minio'] }}"

    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 1000
    exec_as_group: 1000
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

  memcached:
    ip: 172.18.0.59
    image: "{{ images['memcached'] }}"
    
    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 1000
    exec_as_group: 1000
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

  # messaging
  zookeeper: 
    ip: 172.18.0.61
    image: "{{ images['kafka'] }}"

    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 1000
    exec_as_group: 1000
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

  kafka: 
    ip: 172.18.0.62
    image: "{{ images['kafka'] }}"

    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 1000
    exec_as_group: 1000
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

  kafdrop: 
    ip: 172.18.0.63
    image: "{{ images['kafdrop'] }}"

    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 1000
    exec_as_group: 1000
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

  kafkaexporter:
    ip: 172.18.0.64
    image: "{{ images['kafka'] }}"

    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 1000
    exec_as_group: 1000
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

  kafkaui: 
    ip: 172.18.0.65
    image: "{{ images['kafka-ui'] }}"

    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 1000
    exec_as_group: 1000
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

  artemis: 
    ip: 172.18.0.66
    image: "{{ images['artemis'] }}"

    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 1000
    exec_as_group: 1000
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

  # observability
  prometheus: 
    ip: 172.18.0.70
    image: "{{ images['prometheus'] }}"

    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 1000
    exec_as_group: 1000
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 


  grafana: 
    ip: 172.18.0.71
    image: "{{ images['grafana'] }}"

    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 1000
    exec_as_group: 1000
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

    prom_url: http://mimir:9090/prometheus
  loki: 
    ip: 172.18.0.72
    image: "{{ images['loki'] }}"

    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 1000
    exec_as_group: 1000
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

  promtail: 
    ip: 172.18.0.73
    image: "{{ images['promtail'] }}"

  grafana-enterprise: 
    ip: 172.18.0.74
    image: "{{ images['grafana-enterprise'] }}"

    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 1000
    exec_as_group: 1000
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

    prom_url: http://mimir:9090/prometheus

  grafana-agent:
    ip: 172.18.0.75
    # image: grafana/agent:v0.30.2 

    #v0.28.x has working faro traces
    image: "{{ images['agent'] }}"

    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 1000
    exec_as_group: 1000
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

  grafana-alpha: 
    ip: 172.18.0.76
    image: "{{ images['grafana-oss-dev'] }}"

    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 1000
    exec_as_group: 1000
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

    prom_url: http://mimir:9090/prometheus

  cadvisor: 
    ip: 172.18.0.77
    image: "{{ images['cadvisor'] }}"

    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 0
    exec_as_group: 0
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

  mimir: 
    ip: 172.18.0.78
    image: "{{ images['mimir'] }}"

    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 1000
    exec_as_group: 1000
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

  tempo: 
    ip: 172.18.0.79
    image: "{{ images['tempo'] }}"

    declare_hostname: false
    appstate: "{{ global_appstate }}"
    recreate: "{{ global_recreate }}"
    purge: "{{ global_purge }}"
    exec_as_user: 1000
    exec_as_group: 1000
    config_folder: "{{ config_folder_default }}"
    data_folder: "{{ data_folder_default }}"
    ports: 

  

# Example of sensible data config. Should be written in private repo
secretappconfig:
  promtail:
    url: to be overwrittend by group or host vars
  grafana-enterprise:
    license: to be overwrittend by group or host vars
  grafana-agent:
    metrics:
      url: to be overwrittend by group or host vars
      user: overwrite this
      pwd: overwrite this
    logs:
      url: overwrite this

# Example of CICD built apps
apps: 
  rentman: 
    artifactId: rentman
    groupId: com.itteddy
    cleanStart: true
    repo: git@github.com:itteddy/rentman.git
    version: master
    dockerfile: src/main/docker/Dockerfile.multiarch
    artifact: target/quarkus-app
    type: folder
    buildVersion: "1.0.3"
    nextVersion:
    subfolder: 
    mavenrepo: https://admin:password@reposilite.awon.lan/releases
    arch:
      - linux-amd64
      - linux-arm-v7
    registries: 
      - registry.awon.lan
  
  teddycast:
    artifactId: teddycast
    groupId: com.itteddy
    cleanStart: true
    repo: git@github.com:itteddy/teddycast.git
    version: master
    dockerfile: src/main/docker/Dockerfile.multiarch
    artifact: target/quarkus-app
    type: folder
    buildVersion: "1.0.2"
    nextVersion:
    subfolder: 
    mavenrepo: https://admin:password@reposilite.awon.lan/releases
    arch:
      - linux-amd64
      - linux-arm-v7
    registries: 
      - registry.awon.lan


images:
  # Kube
  kube-apiserver: registry.k8s.io/kube-apiserver:v1.25.6
  kube-controller-manager: registry.k8s.io/kube-controller-manager:v1.25.6
  kube-scheduler: registry.k8s.io/kube-scheduler:v1.25.6
  kube-proxy: registry.k8s.io/kube-proxy:v1.25.6
  pause: registry.k8s.io/pause:3.8
  etcd: registry.k8s.io/etcd:3.5.6-0
  coredns: registry.k8s.io/coredns/coredns:v1.9.3

  # metrics server
  metrics-server: k8s.gcr.io/metrics-server/metrics-server:v0.6.2

  # Flannel
  flannel-cni-plugin: flannelcni/flannel-cni-plugin:v1.1.0
  flannel: flannelcni/flannel:v0.20.2

  # ingress nginx
  controller: registry.k8s.io/ingress-nginx/controller:v1.5.1
  kube-webhook-certgen: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20220916-gd32f8c343
  metrics-scraper: kubernetesui/metrics-scraper:v1.0.8

  # kube ui
  dashboard: kubernetesui/dashboard:v2.7.0

  # storage
  local-path-provisioner: rancher/local-path-provisioner:v0.0.23

  # Minio
  minio: minio/minio:RELEASE.2023-02-10T18-48-39Z
  busybox: docker.io/busybox:1.36.0
  curl: curlimages/curl:7.87.0

  # Grafana stack observability

  # Metrics
  enterprise-metrics: grafana/enterprise-metrics:v2.5.1
  mimir: grafana/mimir:2.6.0
  memcached: docker.io/memcached:1.6.18-alpine
  memcached-exporter: prom/memcached-exporter:v0.10.0

  # Logs
  enterprise-logs: grafana/enterprise-logs:v1.6.1
  loki: grafana/loki:2.7.3
  promtail: grafana/promtail:2.7.3

  # Traces
  enterprise-traces: grafana/enterprise-traces:v1.3.0
  tempo: grafana/tempo:1.5.0

  # Grafana
  grafana: grafana/grafana:9.3.6
  grafana-enterprise: grafana/grafana-enterprise:9.3.6
  grafana-oss-dev: grafana/grafana-oss-dev:9.4.0-99996pre
   
  agent: grafana/agent:v0.28.1  # latest is grafana/agent:v0.31.2


  prometheus: prom/prometheus:v2.42.0
  node-exporter: prom/node-exporter:v1.5.0
  cadvisor: gcr.io/cadvisor/cadvisor:v0.47.1
  kube-state-metrics: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0
  
  # Databases
  mariadb: docker.io/mariadb:10.9.4
  mysql: docker.io/mysql:8.0.32
  postgres: docker.io/postgres:15.2
  elasticsearch: docker.io/elasticsearch:8.6.1
  kibana: docker.io/kibana:8.6.1

  adminer: docker.io/adminer:4.8.1

  # messaging
  cp-kafka: confluentinc/cp-kafka:7.3.1
  cp-zookeeper: confluentinc/cp-zookeeper:7.3.1
  cp-server: confluentinc/cp-server:7.3.1
  kafka: quay.io/strimzi/kafka:0.33.1-kafka-3.2.1
  kafdrop: obsidiandynamics/kafdrop:3.30.0
  kafka-ui: provectuslabs/kafka-ui:v0.5.0
  artemis: alainpham/artemis:2.28.0

  # platform essentials
  portainer-ce: portainer/portainer-ce:2.17.0
  nexus3: sonatype/nexus3:3.47.1
  registry: docker.io/registry:2.8.1
  docker-registry-ui: joxit/docker-registry-ui:2.3.3
  traefik: docker.io/traefik:2.9.6
  keycloak: quay.io/keycloak/keycloak:20.0.3-0
  reposilite: dzikoysk/reposilite:3.3.1

  # Demo Applications
  web-shop: alainpham/web-shop:1.8
  shopping-cart: alainpham/shopping-cart:1.3
  products: alainpham/products:otel-1.3
  smoke-test-app: alainpham/smoke-test-app:1.2
  serve: philippgille/serve:0.3.0
  
  # Misc
  squid: ubuntu/squid:5.2-22.04_beta
  eclipse-temurin: docker.io/eclipse-temurin:11.0.18_10-jre
